name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  Formatting:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Check format
        run: cargo fmt -- --check

  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Lint with clippy
        run: RUSTFLAGS="-Dwarnings" cargo clippy --all-features --all-targets -- -Dclippy::all -Dunused_imports

  Testing:
    needs: Formatting
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [beta, stable, windows, macos]
        include:
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: stable
            os: ubuntu-latest
            rust: stable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Run tests
        run: |
          cargo test --no-fail-fast

  MSRV:
    needs: Formatting
    runs-on: ubuntu-latest
    env:
      MSRV_VERSION: 1.65.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSRV toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.MSRV_VERSION }}

      - name: check if README matches MSRV defined here
        run: grep $MSRV_VERSION README.md

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          run:
            cargo test --no-fail-fast

  # TODO re-enable coverage estimation once we have removed the simd-dependency which is incompatible
  # with nightly. We need to wait for the stdlib simd implementation to stabilize, see
  # https://github.com/rust-lang/rust/issues/86656
  # Coverage:
  #   needs: Formatting
  #   runs-on: ubuntu-latest
  #   container:
  #    image: xd009642/tarpaulin:develop-nightly
  #    options: --security-opt seccomp=unconfined
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive

  #     - name: Install nightly toolchain
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         toolchain: nightly

  #     - name: Run cargo-tarpaulin
  #       run: |
  #        set -x
  #        cargo +nightly tarpaulin --all-features --tests --out Lcov -- --test-threads 1

  #     - name: Upload coverage
  #       uses: coverallsapp/github-action@v2
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         path-to-lcov: ./lcov.info
